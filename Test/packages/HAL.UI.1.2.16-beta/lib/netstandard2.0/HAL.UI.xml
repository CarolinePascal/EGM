<?xml version="1.0"?>
<doc>
  <assembly>
    <name>HAL.UI</name>
  </assembly>
  <members>
    <member name="T:HAL.UI.ViewModels.Graphs.IVM_GraphTree">
      <summary>Base model for all tree views.</summary>
    </member>
    <member name="P:HAL.UI.ViewModels.Graphs.IVM_GraphTree.SelectedItem">
      <summary>The item that is currently (last) selected in the tree view.</summary>
    </member>
    <member name="T:HAL.UI.ViewModels.Graphs.VM_CodeBlock">
      <summary>Represents a <see cref="T:HAL.Linguistics.Export.CodeBlock" /> within a TreeView.</summary>
    </member>
    <member name="P:HAL.UI.ViewModels.Graphs.VM_CodeBlock.Children">
      <summary>The children of this item, that is those that are directly connected to this node.</summary>
    </member>
    <member name="T:HAL.UI.ViewModels.Graphs.VM_ExportGraphTree">
      <summary>Represents a <see cref="T:HAL.Linguistics.Export.LanguageExportGraph" /> within a view model to make it compatible with a tree view.</summary>
    </member>
    <member name="M:HAL.UI.ViewModels.Graphs.VM_ExportGraphTree.#ctor(HAL.Linguistics.Export.LanguageExportGraph)">
      <summary>Creates a view model based on an existing graph.</summary>
      <param name="graph">The graph on which to base this view model.</param>
    </member>
    <member name="P:HAL.UI.ViewModels.Graphs.VM_ExportGraphTree.Roots">
      <summary>The encapsulated root nodes of the graph.</summary>
    </member>
    <member name="T:HAL.UI.ViewModels.Graphs.VM_GraphProperty">
      <summary>View model to display the properties of an element in a graph.</summary>
    </member>
    <member name="M:HAL.UI.ViewModels.Graphs.VM_GraphProperty.#ctor(HAL.UI.ViewModels.Graphs.VM_ExportGraphTree)">
      <summary>Creates a new graph property view model for the given graph's items.</summary>
      <param name="exportGraph">That graph that is to be displayed.</param>
    </member>
    <member name="P:HAL.UI.ViewModels.Graphs.VM_GraphProperty.ExportGraph">
      <summary>The graph whose items will be viewed.</summary>
    </member>
    <member name="P:HAL.UI.ViewModels.Graphs.VM_GraphProperty.PropertyPanel">
      <summary>The panel in which the properties will be displayed.</summary>
    </member>
    <member name="T:HAL.UI.ViewModels.Graphs.VM_GraphTree`4">
      <summary>Represents a graph within a view model to make it compatible with a tree view.</summary>
      <typeparam name="TNode">The type of node that this graph contains. </typeparam>
      <typeparam name="TEdge">The type of edge that connects the nodes. </typeparam>
      <typeparam name="TGraph">The graph type which contains these nodes and edges. </typeparam>
      <typeparam name="TItem">The view model type that encapsulates the nodes. </typeparam>
    </member>
    <member name="M:HAL.UI.ViewModels.Graphs.VM_GraphTree`4.#ctor(`2)">
      <summary>Creates a view model based on an existing graph.</summary>
      <param name="graph">The graph on which to base this view model.</param>
    </member>
    <member name="P:HAL.UI.ViewModels.Graphs.VM_GraphTree`4.Graph">
      <summary>The graph from which this view model has been created.</summary>
    </member>
    <member name="P:HAL.UI.ViewModels.Graphs.VM_GraphTree`4.Roots">
      <summary>The encapsulated root nodes of the graph.</summary>
    </member>
    <member name="P:HAL.UI.ViewModels.Graphs.VM_GraphTree`4.SelectedItem">
      <summary>The item that is currently selected in the view.</summary>
    </member>
    <member name="T:HAL.UI.ViewModels.Graphs.IVM_TreeItem">
      <summary>Represents an object in a tree view.</summary>
    </member>
    <member name="P:HAL.UI.ViewModels.Graphs.IVM_TreeItem.Node">
      <summary>The node from which this view model has been created.</summary>
    </member>
    <member name="P:HAL.UI.ViewModels.Graphs.IVM_TreeItem.Name">
      <summary>The name of the tree item.</summary>
    </member>
    <member name="P:HAL.UI.ViewModels.Graphs.IVM_TreeItem.ContextActions">
      <summary>A collection of actions that can be executed via the context menu of this tree item.</summary>
    </member>
    <member name="P:HAL.UI.ViewModels.Graphs.IVM_TreeItem.IsSelected">
      <summary>Maintains a record of whether this tree item is currently selected.</summary>
    </member>
    <member name="P:HAL.UI.ViewModels.Graphs.IVM_TreeItem.IsExpanded">
      <summary>Maintains a record of whether this tree item is currently expanded.</summary>
    </member>
    <member name="T:HAL.UI.ViewModels.Graphs.VM_TreeItem`2">
      <summary>Represents an object in a tree view.</summary>
      <typeparam name="TNode">The type of item being represented. </typeparam>
      <typeparam name="TItem">The tree item view model itself to allow strongly-typed calls to self. </typeparam>
    </member>
    <member name="M:HAL.UI.ViewModels.Graphs.VM_TreeItem`2.#ctor(`0)">
      <summary>Creates a view model based on an existing graph node.</summary>
      <param name="node">The graph node on which to base this view model.</param>
    </member>
    <member name="P:HAL.UI.ViewModels.Graphs.VM_TreeItem`2.Node">
      <summary>The node from which this view model has been created.</summary>
    </member>
    <member name="P:HAL.UI.ViewModels.Graphs.VM_TreeItem`2.Name">
      <summary>The name of the tree item.</summary>
    </member>
    <member name="P:HAL.UI.ViewModels.Graphs.VM_TreeItem`2.Children">
      <summary>The children of this item, that is those that are directly connected to this node.</summary>
    </member>
    <member name="P:HAL.UI.ViewModels.Graphs.VM_TreeItem`2.ContextActions">
      <summary>A collection of actions that can be executed via the context menu of this tree item.</summary>
    </member>
    <member name="P:HAL.UI.ViewModels.Graphs.VM_TreeItem`2.IsSelected">
      <summary>Maintains a record of whether this tree item is currently selected.</summary>
    </member>
    <member name="P:HAL.UI.ViewModels.Graphs.VM_TreeItem`2.IsExpanded">
      <summary>Maintains a record of whether this tree item is currently expanded.</summary>
    </member>
    <member name="T:HAL.UI.ViewModels.Navigation.VM_Breadcrumb">
      <summary>Contains the information necessary to view a path of sub-properties.</summary>
    </member>
    <member name="M:HAL.UI.ViewModels.Navigation.VM_Breadcrumb.#ctor">
      <summary>Default constructor.</summary>
    </member>
    <member name="P:HAL.UI.ViewModels.Navigation.VM_Breadcrumb.PropertyStack">
      <summary>The path from the selected graph item to the property currently being viewed.</summary>
    </member>
    <member name="P:HAL.UI.ViewModels.Navigation.VM_Breadcrumb.SetTo">
      <summary>Command that sets the end of the stack to a given <see cref="T:HAL.Bindings.PropertyKey" />.</summary>
    </member>
    <member name="M:HAL.UI.ViewModels.Navigation.VM_Breadcrumb.SetEndOfStackTo(HAL.Bindings.PropertyKey)">
      <summary>Sets the end of the property stack to a given <see cref="T:HAL.Bindings.PropertyKey" />.</summary>
      <param name="key">The <see cref="T:HAL.Bindings.PropertyKey" /> that should become the end of the stack.</param>
    </member>
    <member name="M:HAL.UI.ViewModels.Navigation.VM_Breadcrumb.Reset">
      <summary>Resets the stack to a default state with nothing but a Root property key.</summary>
    </member>
    <member name="M:HAL.UI.ViewModels.Navigation.VM_Breadcrumb.Push(HAL.Bindings.PropertyKey)">
      <summary>Adds the given key to the end of the property stack.</summary>
      <param name="key">The key to add.</param>
    </member>
    <member name="T:HAL.UI.ViewModels.Navigation.VM_CategoryViewer">
      <summary>Contains the information necessary to view the property categories of a given object.</summary>
    </member>
    <member name="P:HAL.UI.ViewModels.Navigation.VM_CategoryViewer.Categories">
      <summary>The categories of properties of the graph item.</summary>
    </member>
    <member name="P:HAL.UI.ViewModels.Navigation.VM_CategoryViewer.SelectedCategory">
      <summary>The property category that is currently selected. Determines which properties are displayed.</summary>
    </member>
    <member name="P:HAL.UI.ViewModels.Navigation.VM_CategoryViewer.CurrentHost">
      <summary>The item whose categories are maintained by this viewer model.</summary>
    </member>
    <member name="M:HAL.UI.ViewModels.Navigation.VM_CategoryViewer.UpdateCategories">
      <summary>Updates the category stack based on the existing host and its properties.</summary>
    </member>
    <member name="M:HAL.UI.ViewModels.Navigation.VM_CategoryViewer.UpdateCategories(System.Collections.Generic.List{HAL.UI.ViewModels.Properties.VM_EditableProperty})">
      <summary>Updates the category stack based on a given list of property models.</summary>
    </member>
    <member name="T:HAL.UI.ViewModels.Properties.PropertyEditType">
      <summary>Defines the different ways in which one can edit values.</summary>
    </member>
    <member name="F:HAL.UI.ViewModels.Properties.PropertyEditType.Complex">
      <summary>A value that can't be edited by a simple interaction.</summary>
    </member>
    <member name="F:HAL.UI.ViewModels.Properties.PropertyEditType.Boolean">
      <summary>A value that is either true or false.</summary>
    </member>
    <member name="F:HAL.UI.ViewModels.Properties.PropertyEditType.Selectable">
      <summary>A value that has multiple choices, such as an enum.</summary>
    </member>
    <member name="F:HAL.UI.ViewModels.Properties.PropertyEditType.Text">
      <summary>A value that is represented by text.</summary>
    </member>
    <member name="F:HAL.UI.ViewModels.Properties.PropertyEditType.Number">
      <summary>A value that is represented by a number.</summary>
    </member>
    <member name="F:HAL.UI.ViewModels.Properties.PropertyEditType.Measurement">
      <summary>A value that is represented by a unitized value.</summary>
    </member>
    <member name="F:HAL.UI.ViewModels.Properties.PropertyEditType.Expression">
      <summary>An expression.</summary>
    </member>
    <member name="F:HAL.UI.ViewModels.Properties.PropertyEditType.Collection">
      <summary>A collection.</summary>
    </member>
    <member name="F:HAL.UI.ViewModels.Properties.PropertyEditType.UnitizedValue">
      <summary>A unitized value.</summary>
    </member>
    <member name="T:HAL.UI.ViewModels.Properties.VM_BooleanProperty">
      <summary>Contains the information necessary to view and edit boolean properties.</summary>
    </member>
    <member name="M:HAL.UI.ViewModels.Properties.VM_BooleanProperty.#ctor(HAL.Bindings.IBindable,HAL.Bindings.PropertyKey)">
      <summary>Default constructor.</summary>
      <param name="host">The object whose property will be edited by this view model.</param>
      <param name="property">The property of the object that will be edited by this view model.</param>
    </member>
    <member name="P:HAL.UI.ViewModels.Properties.VM_BooleanProperty.Value">
      <summary>The boolean value.</summary>
    </member>
    <member name="M:HAL.UI.ViewModels.Properties.VM_BooleanProperty.GetValue">
      <summary>Gets the value stored in this property.</summary>
      <returns>The value of this editable property.</returns>
    </member>
    <member name="T:HAL.UI.ViewModels.Properties.VM_ComplexProperty">
      <summary>Contains the information necessary to view and edit complex properties, properties which are not primitives.</summary>
    </member>
    <member name="M:HAL.UI.ViewModels.Properties.VM_ComplexProperty.#ctor(HAL.Bindings.IBindable,HAL.Bindings.PropertyKey)">
      <summary>Default constructor.</summary>
      <param name="host">The object whose property will be edited by this view model.</param>
      <param name="property">The property of the object that will be edited by this view model.</param>
    </member>
    <member name="P:HAL.UI.ViewModels.Properties.VM_ComplexProperty.Type">
      <summary>The displayable name of the property type defined by the property key.</summary>
    </member>
    <member name="P:HAL.UI.ViewModels.Properties.VM_ComplexProperty.SubProperties">
      <summary>The displayable properties defined within this complex property.</summary>
    </member>
    <member name="M:HAL.UI.ViewModels.Properties.VM_ComplexProperty.GetValue">
      <summary>Gets the value stored in this property.</summary>
      <returns>The value of this editable property.</returns>
    </member>
    <member name="T:HAL.UI.ViewModels.Properties.VM_EditableProperty">
      <summary>Base class to contain the information necessary to view and edit a property.</summary>
    </member>
    <member name="M:HAL.UI.ViewModels.Properties.VM_EditableProperty.#ctor(HAL.Bindings.IBindable,HAL.Bindings.PropertyKey)">
      <summary>Default constructor.</summary>
      <param name="host">The object whose property will be edited by this view model.</param>
      <param name="property">The property of the object that will be edited by this view model.</param>
    </member>
    <member name="P:HAL.UI.ViewModels.Properties.VM_EditableProperty.Host">
      <summary>The object whose property is to be edited by this view model.</summary>
    </member>
    <member name="P:HAL.UI.ViewModels.Properties.VM_EditableProperty.Property">
      <summary>The property of the host object that is to be edited by this view model.</summary>
    </member>
    <member name="P:HAL.UI.ViewModels.Properties.VM_EditableProperty.Name">
      <summary>The name of this view model.</summary>
    </member>
    <member name="P:HAL.UI.ViewModels.Properties.VM_EditableProperty.IsComplex">
      <summary>Defines whether this is a complex property or is editable.</summary>
    </member>
    <member name="M:HAL.UI.ViewModels.Properties.VM_EditableProperty.GetValue">
      <summary>Gets the value stored in this property.</summary>
      <returns>The value of this editable property.</returns>
    </member>
    <member name="M:HAL.UI.ViewModels.Properties.VM_EditableProperty.EditablePropertyFromType(System.Type)">
      <summary>Converts a <c>Type</c> to a <see cref="T:HAL.UI.ViewModels.Properties.PropertyEditType" /> which dictates its editor.</summary>
      <param name="type">The type to edit.</param>
      <returns>
        <see cref="T:HAL.UI.ViewModels.Properties.PropertyEditType" /> describing the <c>Type</c>'s editor.</returns>
    </member>
    <member name="M:HAL.UI.ViewModels.Properties.VM_EditableProperty.CreateViewModel(HAL.Bindings.IBindable,HAL.Bindings.PropertyKey)">
      <summary>Creates the appropriate property view model which mirrors the property of the given object.</summary>
      <param name="objectToDisplay">The object whose property should be extracted.</param>
      <param name="property">The property to convert.</param>
      <returns>The view models necessary to display or edit the given object's property.</returns>
    </member>
    <member name="M:HAL.UI.ViewModels.Properties.VM_EditableProperty.CreateViewModel(System.Type)">
      <summary>Creates the appropriate property view model which encapsulates the given property type.</summary>
      <param name="type">The property to convert.</param>
      <returns>The view model necessary to display or edit the given property type.</returns>
    </member>
    <member name="T:HAL.UI.ViewModels.Properties.VM_ExpressionProperty">
      <summary>Contains the information necessary to view and edit expressions.</summary>
    </member>
    <member name="M:HAL.UI.ViewModels.Properties.VM_ExpressionProperty.#ctor(HAL.Bindings.IBindable,HAL.Bindings.PropertyKey)">
      <summary>Default constructor.</summary>
      <param name="host">The object whose property will be edited by this view model.</param>
      <param name="property">The property of the object that will be edited by this view model.</param>
    </member>
    <member name="M:HAL.UI.ViewModels.Properties.VM_ExpressionProperty.GetValue">
      <summary>Gets the value stored in this property.</summary>
      <returns>The value of this editable property.</returns>
    </member>
    <member name="T:HAL.UI.ViewModels.Properties.VM_MeasurementProperty">
      <summary>Contains the information necessary to view and edit measurement properties.</summary>
    </member>
    <member name="M:HAL.UI.ViewModels.Properties.VM_MeasurementProperty.#ctor(HAL.Bindings.IBindable,HAL.Bindings.PropertyKey)">
      <summary>Default constructor.</summary>
      <param name="host">The object whose property will be edited by this view model.</param>
      <param name="property">The property of the object that will be edited by this view model.</param>
    </member>
    <member name="P:HAL.UI.ViewModels.Properties.VM_MeasurementProperty.Value">
      <summary>The value.</summary>
    </member>
    <member name="P:HAL.UI.ViewModels.Properties.VM_MeasurementProperty.Minimum">
      <summary>The minimum that the value can be.</summary>
    </member>
    <member name="P:HAL.UI.ViewModels.Properties.VM_MeasurementProperty.Maximum">
      <summary>The maximum that the value can be.</summary>
    </member>
    <member name="P:HAL.UI.ViewModels.Properties.VM_MeasurementProperty.ValueText">
      <summary>The value with the unit suffix.</summary>
    </member>
    <member name="P:HAL.UI.ViewModels.Properties.VM_MeasurementProperty.MinText">
      <summary>The minimum possible value with the unit suffix.</summary>
    </member>
    <member name="P:HAL.UI.ViewModels.Properties.VM_MeasurementProperty.MaxText">
      <summary>The maximum possible value with the unit suffix.</summary>
    </member>
    <member name="M:HAL.UI.ViewModels.Properties.VM_MeasurementProperty.GetValue">
      <summary>Gets the value stored in this property.</summary>
      <returns>The value of this editable property.</returns>
    </member>
    <member name="T:HAL.UI.ViewModels.Properties.VM_NumericProperty">
      <summary>Contains the information necessary to view and edit numeric properties.</summary>
    </member>
    <member name="M:HAL.UI.ViewModels.Properties.VM_NumericProperty.#ctor(HAL.Bindings.IBindable,HAL.Bindings.PropertyKey)">
      <summary>Default constructor.</summary>
      <param name="host">The object whose property will be edited by this view model.</param>
      <param name="property">The property of the object that will be edited by this view model.</param>
    </member>
    <member name="P:HAL.UI.ViewModels.Properties.VM_NumericProperty.Value">
      <summary>The value.</summary>
    </member>
    <member name="P:HAL.UI.ViewModels.Properties.VM_NumericProperty.Minimum">
      <summary>The minimum that the value can be.</summary>
    </member>
    <member name="P:HAL.UI.ViewModels.Properties.VM_NumericProperty.Maximum">
      <summary>The maximum that the value can be.</summary>
    </member>
    <member name="P:HAL.UI.ViewModels.Properties.VM_NumericProperty.Suffix">
      <summary>The unit suffix. Defaults to empty.</summary>
    </member>
    <member name="P:HAL.UI.ViewModels.Properties.VM_NumericProperty.ValueText">
      <summary>The value with the unit suffix.</summary>
    </member>
    <member name="P:HAL.UI.ViewModels.Properties.VM_NumericProperty.MinText">
      <summary>The minimum possible value with the unit suffix.</summary>
    </member>
    <member name="P:HAL.UI.ViewModels.Properties.VM_NumericProperty.MaxText">
      <summary>The maximum possible value with the unit suffix.</summary>
    </member>
    <member name="M:HAL.UI.ViewModels.Properties.VM_NumericProperty.GetValue">
      <summary>Gets the value stored in this property.</summary>
      <returns>The value of this editable property.</returns>
    </member>
    <member name="T:HAL.UI.ViewModels.Properties.VM_PropertyPanel">
      <summary>Contains the information necessary to view and edit the properties and sub-properties of a <see cref="T:HAL.Graphs.IGraphItem" />.</summary>
    </member>
    <member name="M:HAL.UI.ViewModels.Properties.VM_PropertyPanel.#ctor">
      <summary>Creates a new property panel with default settings.</summary>
    </member>
    <member name="M:HAL.UI.ViewModels.Properties.VM_PropertyPanel.#ctor(HAL.UI.ViewModels.Graphs.IVM_TreeItem)">
      <summary>Creates a new property panel based on a particular graph item.</summary>
      <param name="selectedGraphItem">The graph item whose properties should be displayed.</param>
    </member>
    <member name="P:HAL.UI.ViewModels.Properties.VM_PropertyPanel.SelectedGraphItem">
      <summary>The graph item whose properties are to be viewed.</summary>
    </member>
    <member name="P:HAL.UI.ViewModels.Properties.VM_PropertyPanel.Breadcrumbs">
      <summary>The path from the graph item to the sub-property that is currently being edited.</summary>
    </member>
    <member name="P:HAL.UI.ViewModels.Properties.VM_PropertyPanel.Categories">
      <summary>The categories of the object that is currently being edited.</summary>
    </member>
    <member name="P:HAL.UI.ViewModels.Properties.VM_PropertyPanel.Properties">
      <summary>The categories of the object or category that is currently being edited.</summary>
    </member>
    <member name="P:HAL.UI.ViewModels.Properties.VM_PropertyPanel.RootProperties">
      <summary>The properties of the root of the selected objected.</summary>
    </member>
    <member name="P:HAL.UI.ViewModels.Properties.VM_PropertyPanel.CurrentObject">
      <summary>The object that is currently being edited.</summary>
    </member>
    <member name="T:HAL.UI.ViewModels.Properties.VM_PropertyViewer">
      <summary>Contains the information necessary to view and edit a collection of properties.</summary>
    </member>
    <member name="P:HAL.UI.ViewModels.Properties.VM_PropertyViewer.Properties">
      <summary>The properties of the selected category which can each be modified.</summary>
    </member>
    <member name="P:HAL.UI.ViewModels.Properties.VM_PropertyViewer.SelectedProperty">
      <summary>The property that has been selected in the view.</summary>
    </member>
    <member name="M:HAL.UI.ViewModels.Properties.VM_PropertyViewer.GetPropertyViewModels(HAL.Bindings.IBindable,System.Collections.Generic.List{HAL.Bindings.PropertyKey})">
      <summary>Generates a list of property view models which mirror the properties of the given object.</summary>
      <param name="objectToDisplay">The object whose properties should be extracted.</param>
      <param name="properties">Optional. The properties to convert. If none are specified all the publishable properties of the object will be returned.</param>
      <returns>A list of the property view models necessary to display or edit the given object.</returns>
    </member>
    <member name="M:HAL.UI.ViewModels.Properties.VM_PropertyViewer.UpdateProperties(HAL.Bindings.IBindable)">
      <summary>Updates the property list to mirror the properties of the given object.</summary>
      <param name="objectToDisplay">The object whose properties should be extracted.</param>
    </member>
    <member name="T:HAL.UI.ViewModels.Properties.VM_SelectableProperty">
      <summary>Contains the information necessary to view and edit selectable properties, properties which have options e.g. enum.</summary>
    </member>
    <member name="M:HAL.UI.ViewModels.Properties.VM_SelectableProperty.#ctor(HAL.Bindings.IBindable,HAL.Bindings.PropertyKey)">
      <summary>Default constructor.</summary>
      <param name="host">The object whose property will be edited by this view model.</param>
      <param name="property">The property of the object that will be edited by this view model.</param>
    </member>
    <member name="M:HAL.UI.ViewModels.Properties.VM_SelectableProperty.GetValue">
      <summary>Gets the value stored in this property.</summary>
      <returns>The value of this editable property.</returns>
    </member>
    <member name="T:HAL.UI.ViewModels.Properties.VM_TextProperty">
      <summary>Contains the information necessary to view and edit textual properties.</summary>
    </member>
    <member name="M:HAL.UI.ViewModels.Properties.VM_TextProperty.#ctor(HAL.Bindings.IBindable,HAL.Bindings.PropertyKey)">
      <summary>Default constructor.</summary>
      <param name="host">The object whose property will be edited by this view model.</param>
      <param name="property">The property of the object that will be edited by this view model.</param>
    </member>
    <member name="P:HAL.UI.ViewModels.Properties.VM_TextProperty.Text">
      <summary>The text.</summary>
    </member>
    <member name="M:HAL.UI.ViewModels.Properties.VM_TextProperty.GetValue">
      <summary>Gets the value stored in this property.</summary>
      <returns>The value of this editable property.</returns>
    </member>
    <member name="T:HAL.UI.ViewModels.Properties.VM_UnitizedValueProperty">
      <summary>Contains the information necessary to view and edit unitized properties.</summary>
    </member>
    <member name="M:HAL.UI.ViewModels.Properties.VM_UnitizedValueProperty.#ctor(HAL.Bindings.IBindable,HAL.Bindings.PropertyKey)">
      <summary>Default constructor.</summary>
      <param name="host">The object whose property will be edited by this view model.</param>
      <param name="property">The property of the object that will be edited by this view model.</param>
    </member>
    <member name="M:HAL.UI.ViewModels.Properties.VM_UnitizedValueProperty.#ctor(System.Type)">
      <summary>Type-based.</summary>
      <param name="type">The type of the unit to represent.</param>
    </member>
    <member name="P:HAL.UI.ViewModels.Properties.VM_UnitizedValueProperty.Value">
      <summary>The value.</summary>
    </member>
    <member name="M:HAL.UI.ViewModels.Properties.VM_UnitizedValueProperty.GetValue">
      <summary>Gets the value stored in this property.</summary>
      <returns>The value of this editable property.</returns>
    </member>
    <member name="T:HAL.UI.ViewModels.SyntacticVariable.VM_BooleanVariable">
      <summary>Contains the information necessary to view and edit boolean properties.</summary>
    </member>
    <member name="P:HAL.UI.ViewModels.SyntacticVariable.VM_BooleanVariable.Value">
      <summary>The boolean value.</summary>
    </member>
    <member name="T:HAL.UI.ViewModels.SyntacticVariable.VM_ComplexVariable">
      <summary>Contains the information necessary to view and edit complex properties, properties which are not primitives.</summary>
    </member>
    <member name="P:HAL.UI.ViewModels.SyntacticVariable.VM_ComplexVariable.Type">
      <summary>The displayable name of the property type defined by the property key.</summary>
    </member>
    <member name="P:HAL.UI.ViewModels.SyntacticVariable.VM_ComplexVariable.Name">
      <summary>The name of this view model.</summary>
    </member>
    <member name="P:HAL.UI.ViewModels.SyntacticVariable.VM_ComplexVariable.SubProperties">
      <summary>The displayable properties defined within this complex property.</summary>
    </member>
    <member name="P:HAL.UI.ViewModels.SyntacticVariable.VM_ComplexVariable.IsExpanded">
      <summary>Whether this variable has been expanded and is therefore currently displaying all of its children, <c>false</c> otherwise.</summary>
    </member>
    <member name="P:HAL.UI.ViewModels.SyntacticVariable.VM_ComplexVariable.ExpandText">
      <summary>The text used to display whether this variable can be expanded or not.</summary>
    </member>
    <member name="P:HAL.UI.ViewModels.SyntacticVariable.VM_ComplexVariable.ExpandCollapse">
      <summary>Toggles whether this variable is expanded or collapsed.</summary>
    </member>
    <member name="P:HAL.UI.ViewModels.SyntacticVariable.VM_ComplexVariable.PrimitiveConstructor">
      <summary>The constructor that can be used to create a new instance of this variable.</summary>
    </member>
    <member name="M:HAL.UI.ViewModels.SyntacticVariable.VM_ComplexVariable.GetBaseProperties(System.Object)">
      <summary>Extracts the properties of this variable's value.</summary>
    </member>
    <member name="M:HAL.UI.ViewModels.SyntacticVariable.VM_ComplexVariable.FilterProperties(System.Collections.Generic.IEnumerable{HAL.Bindings.PropertyKey})">
      <summary>Filters the properties of this variable to leave only those that are serializable.</summary>
    </member>
    <member name="T:HAL.UI.ViewModels.SyntacticVariable.VM_EditableVariable">
      <summary>Base class to contain the information necessary to view and edit a property.</summary>
    </member>
    <member name="M:HAL.UI.ViewModels.SyntacticVariable.VM_EditableVariable.#ctor(System.Object,HAL.Linguistics.Definition.SyntaxVariableDefinition)">
      <summary>Default constructor.</summary>
      <param name="host">The object whose property will be edited by this view model.</param>
      <param name="variableDefinition">The variable definition that corresponds to this property.</param>
    </member>
    <member name="P:HAL.UI.ViewModels.SyntacticVariable.VM_EditableVariable.Host">
      <summary>The object whose property is to be edited by this view model.</summary>
    </member>
    <member name="P:HAL.UI.ViewModels.SyntacticVariable.VM_EditableVariable.VariableDefinition">
      <summary>Definition of the variable including its type, name and state.</summary>
    </member>
    <member name="P:HAL.UI.ViewModels.SyntacticVariable.VM_EditableVariable.Property">
      <summary>The property of the host object that is to be edited by this view model.</summary>
    </member>
    <member name="P:HAL.UI.ViewModels.SyntacticVariable.VM_EditableVariable.Name">
      <summary>The name of this view model.</summary>
    </member>
    <member name="P:HAL.UI.ViewModels.SyntacticVariable.VM_EditableVariable.Active">
      <summary>The active status of the variable.</summary>
    </member>
    <member name="P:HAL.UI.ViewModels.SyntacticVariable.VM_EditableVariable.VariableName">
      <summary>The name of this variable.</summary>
    </member>
    <member name="P:HAL.UI.ViewModels.SyntacticVariable.VM_EditableVariable.Editable">
      <summary>Defines whether this variable can be edited i.e. written to.</summary>
    </member>
    <member name="P:HAL.UI.ViewModels.SyntacticVariable.VM_EditableVariable.Locked">
      <summary>Whether this variable is not editable.</summary>
    </member>
    <member name="P:HAL.UI.ViewModels.SyntacticVariable.VM_EditableVariable.LockedText">
      <summary>The text to display if this property is locked.</summary>
    </member>
    <member name="P:HAL.UI.ViewModels.SyntacticVariable.VM_EditableVariable.NameAndType">
      <summary>The name and type of the variable.</summary>
    </member>
    <member name="M:HAL.UI.ViewModels.SyntacticVariable.VM_EditableVariable.CreateViewModel(System.Object,HAL.Linguistics.Definition.SyntaxVariableDefinition,HAL.Linguistics.Definition.SyntaxMap)">
      <summary>Creates the appropriate property view model which mirrors the property of the given object.</summary>
      <param name="objectToDisplay">The object whose property should be extracted.</param>
      <param name="synVarDef">The syntactic variable which defines this variable.</param>
      <param name="map">Optional. The syntax map which hosts this variable.</param>
      <returns>The view model necessary to display or edit the given object's property.</returns>
    </member>
    <member name="T:HAL.UI.ViewModels.SyntacticVariable.VM_NumericVariable">
      <summary>Contains the information necessary to view and edit numeric properties.</summary>
    </member>
    <member name="M:HAL.UI.ViewModels.SyntacticVariable.VM_NumericVariable.#ctor(System.Object,HAL.Linguistics.Definition.SyntaxVariableDefinition)">
      <summary>Default constructor.</summary>
      <param name="host">The object whose property will be edited by this view model.</param>
      <param name="variableDefinition">The variable definition that corresponds to this property.</param>
    </member>
    <member name="P:HAL.UI.ViewModels.SyntacticVariable.VM_NumericVariable.Value">
      <summary>The value.</summary>
    </member>
    <member name="T:HAL.UI.ViewModels.SyntacticVariable.VM_PrimitiveConstructor">
      <summary>Stores the values necessary to display an object's constructor which contains only primitive parameters.</summary>
    </member>
    <member name="M:HAL.UI.ViewModels.SyntacticVariable.VM_PrimitiveConstructor.#ctor(System.Reflection.TypeInfo)">
      <summary>Creates a constructor view model to construct the given type.</summary>
      <param name="typeInfo">The type to be created.</param>
    </member>
    <member name="M:HAL.UI.ViewModels.SyntacticVariable.VM_PrimitiveConstructor.#ctor(System.Type)">
      <summary>Creates a constructor view model to construct the given type.</summary>
      <param name="type">The type to be created.</param>
    </member>
    <member name="P:HAL.UI.ViewModels.SyntacticVariable.VM_PrimitiveConstructor.SelectedConstructorIndex">
      <summary>The index of the constructor to display.</summary>
    </member>
    <member name="P:HAL.UI.ViewModels.SyntacticVariable.VM_PrimitiveConstructor.SelectedConcreteIndex">
      <summary>If the type to construct is abstract or an interface, the index of the concrete implementation to display.</summary>
    </member>
    <member name="P:HAL.UI.ViewModels.SyntacticVariable.VM_PrimitiveConstructor.TypeName">
      <summary>The displayable name of the type to construct.</summary>
    </member>
    <member name="P:HAL.UI.ViewModels.SyntacticVariable.VM_PrimitiveConstructor.ConstructorDescriptors">
      <summary>The descriptions of the available constructors.</summary>
    </member>
    <member name="P:HAL.UI.ViewModels.SyntacticVariable.VM_PrimitiveConstructor.ConcreteTypeDescriptors">
      <summary> If the type to construct is abstract or an interface, the descriptions of the available concrete implementations.</summary>
    </member>
    <member name="P:HAL.UI.ViewModels.SyntacticVariable.VM_PrimitiveConstructor.ParamControls">
      <summary>The parameters that will input to the chosen constructor.</summary>
    </member>
    <member name="P:HAL.UI.ViewModels.SyntacticVariable.VM_PrimitiveConstructor.Create">
      <summary>Invokes the chosen constructor and, if possible, assigns the result to the given variable.</summary>
    </member>
    <member name="T:HAL.UI.ViewModels.SyntacticVariable.VM_SelectableVariable">
      <summary>Contains the information necessary to view and edit selectable properties, properties which have options e.g. enum.</summary>
    </member>
    <member name="P:HAL.UI.ViewModels.SyntacticVariable.VM_SelectableVariable.Options">
      <summary>The options available to this variable.</summary>
    </member>
    <member name="P:HAL.UI.ViewModels.SyntacticVariable.VM_SelectableVariable.SelectedItem">
      <summary>The currently selected option.</summary>
    </member>
    <member name="T:HAL.UI.ViewModels.SyntacticVariable.VM_TextVariable">
      <summary>Contains the information necessary to view and edit textual properties.</summary>
    </member>
    <member name="P:HAL.UI.ViewModels.SyntacticVariable.VM_TextVariable.Text">
      <summary>The text.</summary>
    </member>
    <member name="T:HAL.UI.ViewModels.SyntacticVariable.VM_UnitizedVariable">
      <summary>A view model for a <see cref="T:HAL.Units.IUnitizedValue" />.</summary>
    </member>
    <member name="P:HAL.UI.ViewModels.SyntacticVariable.VM_UnitizedVariable.Value">
      <summary>The value.</summary>
    </member>
    <member name="P:HAL.UI.ViewModels.SyntacticVariable.VM_UnitizedVariable.PrimitiveConstructor">
      <summary>The primitive constructor required to construct this variable.</summary>
    </member>
    <member name="P:HAL.UI.ViewModels.SyntacticVariable.VM_UnitizedVariable.IsValid">
      <summary>Defines whether this variable is valid.</summary>
    </member>
    <member name="T:HAL.UI.ViewModels.VM_ContextAction">
      <summary>Defines an action or group of actions to be accessed via a context menu.</summary>
    </member>
    <member name="P:HAL.UI.ViewModels.VM_ContextAction.Name">
      <summary>The displayable name of the action.</summary>
    </member>
    <member name="P:HAL.UI.ViewModels.VM_ContextAction.Action">
      <summary>The action that will be executed when the context menu item is activated.</summary>
    </member>
    <member name="P:HAL.UI.ViewModels.VM_ContextAction.ChildActions">
      <summary>The (optional) child actions of this action. The presence of one or more child actions will define whether this represents an action or action group.</summary>
    </member>
    <member name="P:HAL.UI.ViewModels.VM_ContextAction.IsGroup">
      <summary>Indicate whether this is a group action and therefore has child actions.</summary>
    </member>
  </members>
</doc>